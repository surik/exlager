# Choose the logging level for the journal backend.
# Allowed values: emerg, alert, crit, error, warning, notice, info, debug, false
log.journal.level = false
# Global persistent meta. Should contain attributes in form:
# name1:value,name2:value
log.journal.global_meta = ""

# Choose the logging level for the console backend.
# Allowed values: info, error, false
log.console.level = info

# Choose the format for console logging.
# Allowed values: default, json
log.console.format = default

# Be careful, if level is set to false or omitted, the other gelf options must be omitted too.
# Otherwise lager will crash when starting.
log.gelf.level = debug
# Scheme: <host>[:<port>]
log.gelf.url = graylog.erlang-solutions.com:12201

# Specify the path to the error log for the file backend
log.file.error = false

# Specify the path to the info log for the file backend
log.file.info = false

# Specify the path to the crash log for the file backend
log.file.crash = false

# define modules to be logged at an individual loglevel (at a specific handler)
# lager.traces.lager_console_backend.debug = Elixir.Thor.Client.IBS, Elixir.Thor.Client.AAX

